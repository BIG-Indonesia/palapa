/**
           * ui-leaflet-layers
           *
           * @version: 0.1.1
           * @author: Michael Salgado <elesdoar@gmail.com>
           * @date: Fri Sep 23 2016 19:01:59 GMT-0500 (COT)
           * @license: MIT
           */
(function (window, angular){
  'use strict';
  {"version":3,"sources":["leafletHelpers.es6","leafletLayerHelpers.es6","logger.es6"],"names":["angular","module","config","$provide","decorator","$delegate","leafletLayersLogger","$log","basicFunction","isLoaded","isDefined","layerType","is","layer","extend","GoogleLayerPlugin","L","Google","MapboxGL","mapboxGL","BingLayerPlugin","BingLayer","WFSLayerPlugin","GeoJSON","WFS","ChinaLayerPlugin","tileLayer","chinaProvider","HeatLayerPlugin","heatLayer","WebGLHeatMapLayerPlugin","TileLayer","WebGLHeatMap","YandexLayerPlugin","Yandex","UTFGridPlugin","UtfGrid","$rootScope","leafletHelpers","isArray","isObject","errorHeader","utfGridCreateLayer","error","utfgrid","params","url","pluginOptions","on","e","$broadcast","layerTypes","google","mustHaveUrl","createLayer","type","options","bing","key","wfs","mustHaveLayer","copy","crs","eval","china","heat","mustHaveData","data","setLatLngs","setOptions","webGLHeatmap","setData","yandex","utfGrid","service","nemSimpleLogger","spawn"],"mappings":"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","file":"ui-leaflet-layers.js","sourcesContent":["angular.module('ui-leaflet')\n  .config($provide =>\n    $provide.decorator('leafletHelpers', function($delegate, leafletLayersLogger) {\n      let $log = leafletLayersLogger;\n\n      let basicFunction = layerType =>\n        ({\n          isLoaded() {\n            return angular.isDefined(layerType);\n          },\n          is(layer) {\n            if (this.isLoaded()) {\n              return layer instanceof layerType;\n            }\n            return false;\n          }\n        });\n\n      angular.extend($delegate, {\n        GoogleLayerPlugin: basicFunction(L.Google),\n        MapboxGL: basicFunction(L.mapboxGL),\n        BingLayerPlugin: basicFunction(L.BingLayer),\n        WFSLayerPlugin: basicFunction(L.GeoJSON.WFS),\n        ChinaLayerPlugin: basicFunction(L.tileLayer.chinaProvider),\n        HeatLayerPlugin: basicFunction(L.heatLayer),\n        WebGLHeatMapLayerPlugin: basicFunction(L.TileLayer.WebGLHeatMap),\n        YandexLayerPlugin: basicFunction(L.Yandex),\n        UTFGridPlugin: basicFunction(L.UtfGrid)\n      });\n\n\n      return $delegate;\n    })\n  );\n","angular.module('ui-leaflet')\n  .config($provide =>\n    $provide.decorator('leafletLayerHelpers', function($delegate, $rootScope, leafletHelpers, leafletLayersLogger) {\n      let $log = leafletLayersLogger;\n      let { isArray } = leafletHelpers;\n      let { isObject } = leafletHelpers;\n      let { isDefined } = leafletHelpers;\n      let { errorHeader } = leafletHelpers;\n      let utfGridCreateLayer = params => {\n        if (!leafletHelpers.UTFGridPlugin.isLoaded()) {\n          $log.error(errorHeader + ' The UTFGrid plugin is not loaded.');\n          return;\n        }\n\n        let utfgrid = new L.UtfGrid(params.url, params.pluginOptions);\n\n        utfgrid.on('mouseover', function(e) {\n          $rootScope.$broadcast('leafletDirectiveMap.utfgridMouseover', e);\n        });\n\n        utfgrid.on('mouseout', function(e) {\n          $rootScope.$broadcast('leafletDirectiveMap.utfgridMouseout', e);\n        });\n\n        utfgrid.on('click', function(e) {\n          $rootScope.$broadcast('leafletDirectiveMap.utfgridClick', e);\n        });\n\n        utfgrid.on('mousemove', function(e) {\n          $rootScope.$broadcast('leafletDirectiveMap.utfgridMousemove', e);\n        });\n\n        return utfgrid;\n      };\n\n      angular.extend($delegate.layerTypes, {\n        google: {\n          mustHaveUrl: false,\n          createLayer(params) {\n            let type = params.type || 'SATELLITE';\n            if (!leafletHelpers.GoogleLayerPlugin.isLoaded()) {\n              $log.error(errorHeader + ' The GoogleLayer plugin is not loaded.');\n              return;\n            }\n            return new L.Google(type, params.options);\n          }\n        },\n\n        mapboxGL: {\n          createLayer(params) {\n            if (!leafletHelpers.MapboxGL.isLoaded()) {\n              $log.error(errorHeader + ' The MapboxGL plugin is not loaded.');\n              return;\n            }\n            return new L.mapboxGL(params.options);\n          }\n        },\n\n        bing: {\n          mustHaveUrl: false,\n          createLayer(params) {\n            if (!leafletHelpers.BingLayerPlugin.isLoaded()) {\n              $log.error(errorHeader + ' The Bing plugin is not loaded.');\n              return;\n            }\n            return new L.BingLayer(params.key, params.options);\n          }\n        },\n\n        wfs: {\n          mustHaveUrl: true,\n          mustHaveLayer: true,\n          createLayer(params) {\n            if (!leafletHelpers.WFSLayerPlugin.isLoaded()) {\n              $log.error(errorHeader + ' The WFSLayer plugin is not loaded.');\n              return;\n            }\n            let options = angular.copy(params.options);\n            if (options.crs && 'string' === typeof options.crs) {\n              options.crs = eval(options.crs);\n            }\n            return new L.GeoJSON.WFS(params.url, params.layer, options);\n          }\n        },\n\n        china: {\n          mustHaveUrl:false,\n          createLayer(params) {\n            let type = params.type || '';\n            if (!leafletHelpers.ChinaLayerPlugin.isLoaded()) {\n              $log.error(errorHeader + ' The ChinaLayer plugin is not loaded.');\n              return;\n            }\n            return L.tileLayer.chinaProvider(type, params.options);\n          }\n        },\n\n        heat: {\n          mustHaveUrl: false,\n          mustHaveData: true,\n          createLayer(params) {\n            if (!leafletHelpers.HeatLayerPlugin.isLoaded()) {\n              $log.error(errorHeader + ' The HeatMapLayer plugin is not loaded.');\n              return;\n            }\n            let layer = new L.heatLayer();\n            if (isArray(params.data)) {\n              layer.setLatLngs(params.data);\n            }\n            if (isObject(params.options)) {\n              layer.setOptions(params.options);\n            }\n            return layer;\n          }\n        },\n\n        webGLHeatmap: {\n          mustHaveUrl: false,\n          mustHaveData: true,\n          createLayer(params) {\n            if (!leafletHelpers.WebGLHeatMapLayerPlugin.isLoaded()) {\n              $log.error(errorHeader + ' The WebGLHeatMapLayer plugin is not loaded.');\n              return;\n            }\n            let layer = new L.TileLayer.WebGLHeatMap(params.options);\n            if (isDefined(params.data)) {\n              layer.setData(params.data);\n            }\n            return layer;\n          }\n        },\n\n        yandex: {\n          mustHaveUrl: false,\n          createLayer(params) {\n            let type = params.type || 'map';\n            if (!leafletHelpers.YandexLayerPlugin.isLoaded()) {\n              $log.error(errorHeader + ' The YandexLayer plugin is not loaded.');\n              return;\n            }\n            return new L.Yandex(type, params.options);\n          }\n        },\n\n        utfGrid: {\n          mustHaveUrl: true,\n          createLayer: utfGridCreateLayer\n        }\n      });\n\n      return $delegate;\n    })\n  );\n","angular.module('ui-leaflet')\n  .service('leafletLayersLogger', nemSimpleLogger => nemSimpleLogger.spawn());\n"],"sourceRoot":"/source/"}
})(window, angular);